{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getDatabase, ref, set, push, onValue, update, increment } from 'firebase/database';\n\n// Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCKE2myj5Cdpme0BMvpeJSbeKKmEN51Vsw\",\n  authDomain: \"puzzler-23312.firebaseapp.com\",\n  projectId: \"puzzler-23312\",\n  storageBucket: \"puzzler-23312.firebasestorage.app\",\n  messagingSenderId: \"662163993487\",\n  appId: \"1:662163993487:web:238adfcd87fb112e8091fa\",\n  measurementId: \"G-01ZC0J2GK6\",\n  databaseURL: \"https://puzzler-23312-default-rtdb.firebaseio.com\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst database = getDatabase(app);\n\n// Reference to the donations collection\nconst donationsRef = ref(database, 'waterWeightDonations');\n\n// Save a new donation to Firebase\nexport const saveDonation = async donationData => {\n  try {\n    // Save individual donation record\n    const newDonationRef = push(donationsRef);\n    await set(newDonationRef, donationData);\n\n    // Update total stats\n    const statsRef = ref(database, 'waterWeightStats');\n    const updates = {\n      totalRaised: increment(donationData.amount),\n      donationCount: increment(1)\n    };\n    await update(statsRef, updates);\n    return true;\n  } catch (error) {\n    console.error('Error saving donation:', error);\n    return false;\n  }\n};\n\n// Get total donations\nexport const getTotalDonations = callback => {\n  const statsRef = ref(database, 'waterWeightStats/totalRaised');\n  onValue(statsRef, snapshot => {\n    const total = snapshot.val() || 0;\n    callback(total);\n  });\n};\n\n// Get donation count\nexport const getDonationCount = callback => {\n  const countRef = ref(database, 'waterWeightStats/donationCount');\n  onValue(countRef, snapshot => {\n    const count = snapshot.val() || 0;\n    callback(count);\n  });\n};","map":{"version":3,"names":["initializeApp","getDatabase","ref","set","push","onValue","update","increment","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","databaseURL","app","database","donationsRef","saveDonation","donationData","newDonationRef","statsRef","updates","totalRaised","amount","donationCount","error","console","getTotalDonations","callback","snapshot","total","val","getDonationCount","countRef","count"],"sources":["/Users/willhoppin/Desktop/tralelero/tralelero/src/services/firebase.ts"],"sourcesContent":["import { initializeApp } from 'firebase/app';\nimport { getDatabase, ref, set, push, onValue, update, increment } from 'firebase/database';\n\n// Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCKE2myj5Cdpme0BMvpeJSbeKKmEN51Vsw\",\n  authDomain: \"puzzler-23312.firebaseapp.com\",\n  projectId: \"puzzler-23312\",\n  storageBucket: \"puzzler-23312.firebasestorage.app\",\n  messagingSenderId: \"662163993487\",\n  appId: \"1:662163993487:web:238adfcd87fb112e8091fa\",\n  measurementId: \"G-01ZC0J2GK6\",\n  databaseURL: \"https://puzzler-23312-default-rtdb.firebaseio.com\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst database = getDatabase(app);\n\n// Reference to the donations collection\nconst donationsRef = ref(database, 'waterWeightDonations');\n\n// Save a new donation to Firebase\nexport const saveDonation = async (donationData: {\n  amount: number;\n  timestamp: number;\n  donor?: string;\n}) => {\n  try {\n    // Save individual donation record\n    const newDonationRef = push(donationsRef);\n    await set(newDonationRef, donationData);\n    \n    // Update total stats\n    const statsRef = ref(database, 'waterWeightStats');\n    const updates = {\n      totalRaised: increment(donationData.amount),\n      donationCount: increment(1)\n    };\n    \n    await update(statsRef, updates);\n    \n    return true;\n  } catch (error) {\n    console.error('Error saving donation:', error);\n    return false;\n  }\n};\n\n// Get total donations\nexport const getTotalDonations = (callback: (total: number) => void) => {\n  const statsRef = ref(database, 'waterWeightStats/totalRaised');\n  \n  onValue(statsRef, (snapshot) => {\n    const total = snapshot.val() || 0;\n    callback(total);\n  });\n};\n\n// Get donation count\nexport const getDonationCount = (callback: (count: number) => void) => {\n  const countRef = ref(database, 'waterWeightStats/donationCount');\n  \n  onValue(countRef, (snapshot) => {\n    const count = snapshot.val() || 0;\n    callback(count);\n  });\n}; "],"mappings":"AAAA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,WAAW,EAAEC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAEC,OAAO,EAAEC,MAAM,EAAEC,SAAS,QAAQ,mBAAmB;;AAE3F;AACA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,+BAA+B;EAC3CC,SAAS,EAAE,eAAe;EAC1BC,aAAa,EAAE,mCAAmC;EAClDC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE,2CAA2C;EAClDC,aAAa,EAAE,cAAc;EAC7BC,WAAW,EAAE;AACf,CAAC;;AAED;AACA,MAAMC,GAAG,GAAGjB,aAAa,CAACQ,cAAc,CAAC;AACzC,MAAMU,QAAQ,GAAGjB,WAAW,CAACgB,GAAG,CAAC;;AAEjC;AACA,MAAME,YAAY,GAAGjB,GAAG,CAACgB,QAAQ,EAAE,sBAAsB,CAAC;;AAE1D;AACA,OAAO,MAAME,YAAY,GAAG,MAAOC,YAIlC,IAAK;EACJ,IAAI;IACF;IACA,MAAMC,cAAc,GAAGlB,IAAI,CAACe,YAAY,CAAC;IACzC,MAAMhB,GAAG,CAACmB,cAAc,EAAED,YAAY,CAAC;;IAEvC;IACA,MAAME,QAAQ,GAAGrB,GAAG,CAACgB,QAAQ,EAAE,kBAAkB,CAAC;IAClD,MAAMM,OAAO,GAAG;MACdC,WAAW,EAAElB,SAAS,CAACc,YAAY,CAACK,MAAM,CAAC;MAC3CC,aAAa,EAAEpB,SAAS,CAAC,CAAC;IAC5B,CAAC;IAED,MAAMD,MAAM,CAACiB,QAAQ,EAAEC,OAAO,CAAC;IAE/B,OAAO,IAAI;EACb,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,OAAO,KAAK;EACd;AACF,CAAC;;AAED;AACA,OAAO,MAAME,iBAAiB,GAAIC,QAAiC,IAAK;EACtE,MAAMR,QAAQ,GAAGrB,GAAG,CAACgB,QAAQ,EAAE,8BAA8B,CAAC;EAE9Db,OAAO,CAACkB,QAAQ,EAAGS,QAAQ,IAAK;IAC9B,MAAMC,KAAK,GAAGD,QAAQ,CAACE,GAAG,CAAC,CAAC,IAAI,CAAC;IACjCH,QAAQ,CAACE,KAAK,CAAC;EACjB,CAAC,CAAC;AACJ,CAAC;;AAED;AACA,OAAO,MAAME,gBAAgB,GAAIJ,QAAiC,IAAK;EACrE,MAAMK,QAAQ,GAAGlC,GAAG,CAACgB,QAAQ,EAAE,gCAAgC,CAAC;EAEhEb,OAAO,CAAC+B,QAAQ,EAAGJ,QAAQ,IAAK;IAC9B,MAAMK,KAAK,GAAGL,QAAQ,CAACE,GAAG,CAAC,CAAC,IAAI,CAAC;IACjCH,QAAQ,CAACM,KAAK,CAAC;EACjB,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}